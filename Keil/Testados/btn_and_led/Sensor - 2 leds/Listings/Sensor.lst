C51 COMPILER V9.56.0.0   SENSOR                                                            09/22/2016 09:21:19 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE SENSOR
OBJECT MODULE PLACED IN .\Objects\Sensor.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Sensor.c BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\Sensor.lst) OBJECT(.
                    -\Objects\Sensor.obj)

line level    source

   1          /*Codigo para enviar um sinal simples por radio para acender e apagar um led
   2          * que se encontra conectado a outro radio.
   3          * Infomações:
   4          * Sinal:
   5          *       - Btn1 em P0-2 - envia numero 1 via radio
   6          *       - Btn2 em P1-4 - envia numero 2 via radio
   7          *       - LED1 em P0-3 - altera o estado ao receber numero 1
   8          *       - LED2 em P0-6 - altera o estado ao receber numero 2
   9          */
  10          
  11          #include "reg24le1.h" //Definições de muitos endereços de registradores.
  12          #include "stdint.h" //inteiros uint8_t, int8_t, uint16_t....
  13          #include "stdbool.h" //Bolleanos
  14          #include "API.h" //Define alguns registers e cabeçalhos de funções SPI
  15          #include "app.h" //Some UART and io functions
  16          #include "nRF-SPIComands.h" //rf_init, RF_IRQ, TX, RX, SPI_Write, SPI_Read ..
  17          
  18          //Definições dos botões e leds
  19          #define PIN32
  20          #ifdef  PIN32
  21          //Pushbuttons
  22          sbit S1  = P0^2;    // 1/0=no/press
  23          sbit S2  = P1^4;    // 1/0=no/press
  24          //LEDS
  25          sbit LED1 = P0^3; // 1/0=light/dark
  26          sbit LED2 = P0^6; // 1/0=light/dark
  27          #endif
  28          
  29          void delay(unsigned int x);
  30          
  31          void CheckButtons(void)
  32          {
  33   1              if (!S1) {
  34   2                      //LED1 = !LED1; Feedback
  35   2                      tx_buf[0]=1;
  36   2                      TX_Mode_NOACK(1);
  37   2                      RX_Mode();
  38   2                      delay(300);
  39   2              }
  40   1              if(!S2){
  41   2                      //LED2 = !LED2; Feedback
  42   2                      tx_buf[0]=2;
  43   2                      TX_Mode_NOACK(1);
  44   2                      RX_Mode();
  45   2                      delay(300);
  46   2        }
  47   1      }
  48          
  49          
  50          void luzes_iniciais(void){
  51   1              LED1 = 1; LED2 = 0;
  52   1              delay(1000);
  53   1              LED1 = 0; LED2 = 1;
  54   1              delay(1000);
C51 COMPILER V9.56.0.0   SENSOR                                                            09/22/2016 09:21:19 PAGE 2   

  55   1              LED1 = 1; LED2 = 1;
  56   1              delay(1000);
  57   1              LED1 = 0; LED2 = 0;
  58   1      }
  59          void main(void){
  60   1          // Set up GPIO
  61   1          P0DIR = 0xB7;   // 1011 0111 - 1/0 = In/Out - Output: P0.3 e P0.6
  62   1          P1DIR = 0xFF;   // Tudo input
  63   1          P2DIR = 0xFF;
  64   1          P0CON = 0x00;       // All general I/O
  65   1          P1CON = 0x00;       // All general I/O
  66   1          P2CON = 0x00;       // All general I/O
  67   1      
  68   1          luzes_iniciais();
  69   1      
  70   1          // Radio + SPI setup
  71   1          RFCE = 0;       // Radio chip enable low
  72   1          RFCKEN = 1;     // Radio clk enable
  73   1          RF = 1;
  74   1      
  75   1          rf_init();
  76   1          EA=1; //ativa as interrupções
  77   1      
  78   1          RX_Mode();
  79   1                      while(1){
  80   2                              CheckButtons();
  81   2                              if(newPayload){
  82   3                                      switch(rx_buf[0]){
  83   4                                              case 1:
  84   4                                                      LED1 = !LED1;
  85   4                                                      break;
  86   4                                              case 2:
  87   4                                                      LED2 = !LED2;
  88   4                                                      break;
  89   4                                      }
  90   3                              }
  91   2                              sta = 0;
  92   2            newPayload = 0;
  93   2                              delay(100);
  94   2                      }
  95   1      
  96   1      //    while(1){
  97   1      //        CheckButtons();
  98   1      //        if(newPayload)                                                                // finish received
  99   1      //        {
 100   1      //            if(rx_buf[0] == 1){
 101   1      //                LED1 = !LED1;
 102   1      //            } else if(rx_buf[0] == 2){
 103   1      //                LED2 = !LED2;
 104   1      //            }
 105   1      //            sta = 0;
 106   1      //            newPayload = 0;
 107   1      //        }
 108   1      //    }
 109   1      
 110   1      }
 111          /**************************************************/
 112          void delay(unsigned int x)
 113          {
 114   1          unsigned int i,j;
 115   1          i=0;
 116   1          for(i=0;i<x;i++)
C51 COMPILER V9.56.0.0   SENSOR                                                            09/22/2016 09:21:19 PAGE 3   

 117   1          {
 118   2             j=508;
 119   2                 ;
 120   2             while(j--);
 121   2          }
 122   1      }
 123          /**************************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    587    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     67      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

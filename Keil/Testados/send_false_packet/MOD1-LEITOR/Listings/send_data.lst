C51 COMPILER V9.56.0.0   SEND_DATA                                                         09/28/2016 10:21:25 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE SEND_DATA
OBJECT MODULE PLACED IN .\Objects\send_data.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE send_data.c BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\send_data.lst) OB
                    -JECT(.\Objects\send_data.obj)

line level    source

   1          #include "reg24le1.h" //Defini��es de muitos endere�os de registradores.
   2          #include "stdint.h" //inteiros uint8_t, int8_t, uint16_t....
   3          #include "stdbool.h" //Booleanos
   4          #include "API.h"
   5          #include "nRF-SPIComands.h"
   6          
   7          
   8          //Subendere�os usados no sistema
   9          #define MY_SUB_ADDR 0x01
  10          #define OTHER_SUB_ADDR 0x02
  11          // pacote = [sub_endere�o_destinatario] QWH   QWL     QXH     QXL     QYH     QYL     QZH     QZL     AXH     AXL     AYH     AYL     AZH     AZL GXH GXL     
             -GYH        GYL        GZH     GZL     MXH     MXL     MYH     MYL     MZH     MZL
  12          uint8_t pacote[27] = {OTHER_SUB_ADDR, 17,143,253,24,255,38,194,135,0,0,0,0,255,254,3,222,255,131,31,36,0,1
             -03,0,131,0,174};
  13          // pacote a receber= [sub_endere�o_destinatario] [parar ou iniciar leituras]
  14          #define Sinal_iniciar 0x0A
  15          #define Sinal_parar 0x0B
  16          
  17          
  18          #define INTERRUPT_TMR0  1
  19          
  20          //Defini��es dos bot�es e leds
  21          #define PIN32
  22          #ifdef  PIN32
  23          //Pushbuttons
  24          sbit S1  = P0^2;    // 1/0=no/press
  25          sbit S2  = P1^4;    // 1/0=no/press
  26          //LEDS
  27          sbit LED1 = P0^3; // 1/0=light/dark
  28          sbit LED2 = P0^6; // 1/0=light/dark
  29          #endif
  30          
  31          void delay_ms(unsigned int x);
  32          void start_T0(void);
  33          void stop_T0(void);
  34          void enviar_pacote_leituras();
  35          int i = 0;
  36          
  37          /**************************************************/
  38          // Vari�veis do TMR0
  39          unsigned char NBT0H  = 0x52;                    // Este tempo
  40          unsigned char NBT0L  = 0x63;                    // equivale a
  41          unsigned char NOVT0  = 0x00;                    // Freq. de Amostragem de 30Hz
  42          int timer_flag = 3;
  43          /**************************************************/
  44          void TMR0_IRQ(void) interrupt INTERRUPT_TMR0
  45          {
  46   1              if(!NOVT0)
  47   1              {
  48   2                      timer_flag--;
  49   2                      TH0= NBT0H;
  50   2                      TL0= NBT0L;
  51   2              }
  52   1      }
C51 COMPILER V9.56.0.0   SEND_DATA                                                         09/28/2016 10:21:25 PAGE 2   

  53          /**************************************************/
  54          
  55          void luzes_iniciais(void){
  56   1              LED1 = 1; LED2 = 0;
  57   1              delay_ms(1000);
  58   1              LED1 = 0; LED2 = 1;
  59   1              delay_ms(1000);
  60   1              LED1 = 1; LED2 = 1;
  61   1              delay_ms(1000);
  62   1              LED1 = 0; LED2 = 0;
  63   1      }
  64          
  65          void setup(void){
  66   1               // Set up GPIO
  67   1          P0DIR = 0xB7;   // 1011 0111 - 1/0 = In/Out - Output: P0.3 e P0.6
  68   1          P1DIR = 0xFF;   // Tudo input
  69   1          P2DIR = 0xFF;
  70   1          P0CON = 0x00;       // All general I/O
  71   1          P1CON = 0x00;       // All general I/O
  72   1          P2CON = 0x00;       // All general I/O
  73   1              // Radio + SPI setup
  74   1          RFCE = 0;       // Radio chip enable low
  75   1          RFCKEN = 1;     // Radio clk enable
  76   1          RF = 1;
  77   1      
  78   1          rf_init();
  79   1          EA=1; //ativa as interrup��es
  80   1              luzes_iniciais();
  81   1          RX_Mode();
  82   1      }
  83          void main(void){
  84   1              setup();
  85   1              while(1){
  86   2                      if(newPayload){
  87   3                              //verifica se o sinal � para mim
  88   3                              if(rx_buf[0]== MY_SUB_ADDR){
  89   4                                       switch(rx_buf[1]){
  90   5                                              case Sinal_iniciar:
  91   5                              LED1 = 1;
  92   5                                                      tx_buf[0] = OTHER_SUB_ADDR;
  93   5                                                      tx_buf[1] = 'S';
  94   5                                                      TX_Mode_NOACK(2);
  95   5                                                      RX_Mode();
  96   5                              start_T0();
  97   5                                                      break;
  98   5                                              case Sinal_parar:
  99   5                                                      LED1 = 0;
 100   5                                                      tx_buf[0] = OTHER_SUB_ADDR;
 101   5                                                      tx_buf[1] = 'E';
 102   5                                                      TX_Mode_NOACK(2);
 103   5                                                      RX_Mode();
 104   5                              stop_T0();
 105   5                                                      break;
 106   5                                      }
 107   4      
 108   4                              }
 109   3                              sta = 0;
 110   3                      newPayload = 0;
 111   3                      }
 112   2                      if(timer_flag <= 0){
 113   3                              timer_flag = 3;
 114   3                  enviar_pacote_leituras();
C51 COMPILER V9.56.0.0   SEND_DATA                                                         09/28/2016 10:21:25 PAGE 3   

 115   3                      }
 116   2              }
 117   1      }
 118          /**************************************************/
 119          void delay_ms(unsigned int x)
 120          {
 121   1          unsigned int i,j;
 122   1          i=0;
 123   1          for(i=0;i<x;i++)
 124   1          {
 125   2             j=508;
 126   2                 ;
 127   2             while(j--);
 128   2          }
 129   1      }
 130          /**************************************************/
 131          /****************TIMER*****************************/
 132          /**************************************************/
 133          //Timer comfigurado para freq de amostragem 30Hz
 134          void start_T0(void)
 135          {
 136   1              TMOD=0x31;                                              // Select Timer 1 --> STOPPED, Timer 0 --> TIMER/16 bits
 137   1              TH0= NBT0H;
 138   1              TL0= NBT0L;
 139   1              ET0=1;                                                          // Active interrupt on Timer 0
 140   1              EA=1;                                                                   // Active all interrupts
 141   1              TR0=1;                                                          // Timer 0 --> RUN
 142   1      }
 143          /**************************************************/
 144          void stop_T0(void)
 145          {
 146   1              TMOD=0x31;                                              // Select Timer 1 --> STOPPED, Timer 0 --> TIMER/16 bits
 147   1              TH0= NBT0H;
 148   1              TL0= NBT0L;
 149   1              ET0=0;                                                          // Active interrupt on Timer 0
 150   1              EA=1;                                                                   // Active all interrupts
 151   1              TR0=0;                                                          // Timer 0 --> RUN
 152   1      }
 153          /********************PACOTE******************/
 154          void enviar_pacote_leituras(){
 155   1              LED2 = 1;
 156   1              tx_buf[0] = OTHER_SUB_ADDR;
 157   1              for(i = 1; i<27; i++){
 158   2                      tx_buf[i] = pacote[i];
 159   2              }
 160   1              TX_Mode_NOACK(27);
 161   1              RX_Mode();
 162   1              LED2 = 0;
 163   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    707    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     95      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
